<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.examsys.dao.QuestionLibraryMapper">

  <resultMap id="BaseResultMap" type="com.examsys.model.QuestionLibrary" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="options" property="options" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>

  <update id="updateByPK" parameterType="com.examsys.model.QuestionLibrary" >
    update question_library
    set content = #{content,jdbcType=VARCHAR},
      options = #{options,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      description=#{description},
      `type` = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.examsys.model.QuestionLibrary" >
    insert into question_library (id, content, options,
      answer, `type`,description)
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{options,jdbcType=VARCHAR},
      #{answer,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>

  <select id="selectByQuestion" parameterType="com.examsys.model.QuestionLibrary" resultMap="BaseResultMap">
    select id, content, options, answer, `type`,description
    from question_library
    where content = #{content} and options=#{options}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select id, content, options, answer, `type`,description
    from question_library
  </select>

  <resultMap id="quesKnowNameEntity" type="com.examsys.model.entity.QuesKnowNameEntity">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="options" property="options" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />

    <collection property="knowledge" javaType="java.util.List" ofType="java.lang.String">
      <result column="knowledge" property="knowledge" jdbcType="VARCHAR" />
    </collection>
  </resultMap>

  <select id="selectAllWithKnowledgeName" resultMap="quesKnowNameEntity">
    select q.id, q.content, q.options, q.answer, q.type,q.description,
          k.name knowledge
    from question_library q
    left join ques_knowledge qk on q.id = qk.question_id
    left join knowledge k on k.id = qk.knowledge_id
  </select>

  <select id="selectByFilter" parameterType="java.lang.String" resultMap="quesKnowNameEntity">
    select q1.id ,q1.content,q1.options, q1.answer,q1.type,q1.description,
           kl.name knowledge
		from question_library q1
		left join ques_knowledge qk1 on q1.id = qk1.question_id
		left join  knowledge kl on qk1.knowledge_id=kl.id
		where q1.id
		     in(select q.id from question_library q
                  left join ques_knowledge qk on q.id = qk.question_id
                  left join knowledge k on qk.knowledge_id=k.id
                  where 1=1
                  <if test="content!=''">and q.content regexp #{content}</if>
                  <if test="type!=''">and q.type regexp #{type}</if>
                  <if test="kname!=''">and k.name regexp #{kname}</if>
                )
  </select>
    <!--<if test="content!='' or type!='' or kname!=''">-->
    <!--where-->
    <!--<if test="content!=''">-->
    <!--q.content regexp #{content}-->
    <!--<if test="type!='' or kname!=''">and</if>-->
    <!--</if>-->
    <!--<if test="type!=''">-->
    <!--q.type regexp #{type}-->
    <!--<if test="kname!=''">and</if>-->
    <!--</if>-->

    <!--<if test="kname!=''">k.name regexp #{kname}</if>-->

    <!--</if>-->

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from question_library
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <update id="updateByPrimaryKey" parameterType="com.examsys.model.QuestionLibrary" >
    update question_library
    set content = #{content,jdbcType=VARCHAR},
      options = #{options,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      description=#{description},
      `type` = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, content, options, answer, `type`,description
    from question_library
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getId" resultMap="BaseResultMap" parameterType="com.examsys.model.QuestionLibrary" >
    select id, content, options, answer, `type`,description
    from question_library
    where content = #{content,jdbcType=VARCHAR} and options = #{options,jdbcType=VARCHAR}
  </select>
  <select id="selectQuesByKnow" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT q.id id,q.content content,q.options options,q.answer answer,q.`type` `type`,q.description description
        FROM `question_library` q
        LEFT JOIN  ques_knowledge qk on q.id=qk.question_id
        where qk.knowledge_id=#{k_id}
   </select>
</mapper>